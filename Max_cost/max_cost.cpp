/*
1)–°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫—É–ø—é—Ä—ã (–∫–∞–∫ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, —Ç–∞–∫ –∏ –ø—Ä–æ–¥–∞–≤—Ü–∞) –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.
–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –∫–∞–∫–∏–µ —Å—É–º–º—ã –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å
—Å –ø–æ–º–æ—â—å—é –∏–º–µ—é—â–∏—Ö—Å—è –∫—É–ø—é—Ä.
2)–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ùëÜ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–¥–∞—á—É, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å, 
–∏—Å–ø–æ–ª—å–∑—É—è —á–∞—Å—Ç—å –∏–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É–ø—é—Ä—ã. –ò–¥–µ—è —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ –µ—Å–ª–∏ 
–º—ã –º–æ–∂–µ–º –≤–µ—Ä–Ω—É—Ç—å –ª—é–±—É—é —Å—É–º–º—É –æ—Ç 1 –¥–æ ùëÜ, –Ω–æ –Ω–µ –º–æ–∂–µ–º –≤–µ—Ä–Ω—É—Ç—å —Å—É–º–º—É (S+1),
—Ç–æ —ç—Ç–∞ —Å—É–º–º–∞ –∏ –±—É–¥–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–π –Ω–µ–ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º–æ–π (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ–π) —Å—É–º–º–æ–π.
3)–ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫—É–ø—é—Ä–∞–º. –ú—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫—É–ø—é—Ä–∞–º –∏, 
–µ—Å–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–∞—è –∫—É–ø—é—Ä–∞ aùëñ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ (S+1), –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ S.
–≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–µ—Ä–Ω—É—Ç—å —Å—É–º–º—É –æ—Ç 1 –¥–æ (S + aùëñ). –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ–º
–∫—É–ø—é—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –±–æ–ª—å—à–µ (S+1), —Ç–æ (S+1) ‚Äî —ç—Ç–æ —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å.
4)–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–±—â–µ–π —Å—É–º–º–æ–π. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–¥–∞—á—É S,
–ø—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å —Å–¥–∞—á—É –Ω–∞ –ª—é–±—É—é –≤–æ–∑–º–æ–∂–Ω—É—é –ø–æ–∫—É–ø–∫—É (—Ç.–µ.
S –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω —Å—É–º–º–∞—Ä–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤—Å–µ—Ö –∫—É–ø—é—Ä –ø–æ–∫—É–ø–∞—Ç–µ–ª—è).
–ï—Å–ª–∏ –¥–∞, –≤—ã–≤–æ–¥–∏–º "YES", –∏–Ω–∞—á–µ ‚Äî "NO" –∏ –Ω–∞–∏–±–æ–ª—å—à—É—é –Ω–µ–ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.
*/

#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>

using namespace std;

int main() {
    ifstream inputFile("input.txt");
    ofstream outputFile("output.txt");

    if (!inputFile.is_open() || !outputFile.is_open()) {
        cerr << "–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–æ–≤!" << endl;
        return 1;
    }

    int n, m;
    inputFile >> n >> m;

    vector<int> buyerBills(n);
    vector<int> sellerBills(m);

    for (int i = 0; i < n; ++i) {
        inputFile >> buyerBills[i];
    }

    for (int i = 0; i < m; ++i) {
        inputFile >> sellerBills[i];
    }

    vector<int> allBills = buyerBills;
    allBills.insert(allBills.end(), sellerBills.begin(), sellerBills.end());

    sort(allBills.begin(), allBills.end());

    int S = 0;

    for (int i = 0; i < allBills.size(); ++i) {
        if (allBills[i] > S + 1) {
            break;
        }
        S += allBills[i];
    }

    int totalMoney = 0;
    for (int bill : buyerBills) {
        totalMoney += bill;
    }

    if (S >= totalMoney) {
        outputFile << "YES" << endl;
    } else {
        outputFile << "NO" << endl;
        outputFile << totalMoney - (S + 1) << endl;
    }

    inputFile.close();
    outputFile.close();

    return 0;
}
